traverse_1 ( intersection ( river , loc_2 ( m0 ) ) )
intersection ( state , next_to_1 ( argmax ( state , count ( intersection ( city , major ) ) ) ) )
answer (largest_one(count_1, state_1), border_2(state_1, count_1))
answer ( smallest_one ( population_1 , city ) )
answer ( capital ( intersection ( state , next_to_2 ( m0 ) ) ) )
answer ( highest_point ( m0 ) )
intersection(river, m0)
answer (population_1 (m0))
answer ( intersection ( river , loc_2 ( m0 ) ) )
answer ( lowest ( intersection ( place , loc_2 ( m0 ) ) ) )
intersection(state, next_to_2(m0))
answer ( city_1 ( major_1 , loc_2 ( m0 ) ) )
answer ( largest_one ( count_1 ( state_2 ( next_to_2 ( river_1 ) ) ) , river_1 ) )
answer(length_1, intersection(river, m0))
intersection(state, traverse(m0, river))
answer ( city_1 ( m0 ) )
intersection ( count ( state ) , loc_1 ( next_to ( major ( river ) ) ) )
answer (intersection (river, loc_2 (m0)))
answer ( smallest_one ( area_1 , state ) )
answer ( highest ( peak , intersection ( state , country ) ) )
answer ( count ( intersection ( state , loc_2 ( city_name ( m0 ) ) ) ) )
intersection ( river , loc_2 ( m0 ) )
answer ( largest_one ( area_1 , intersection ( state , loc_2 ( m0 ) ) ) )
answer ( population_1 ( m0 ) )
answer ( intersection ( state , next_to_2 ( m0 ) ) )
answer ( largest_one ( population_1 , intersection ( city , loc_2 ( m0 ) ) ) )
answer ( len ( shortest ( intersection ( river , loc_2 ( m0 ) ) ) ) )
answer ( major ( city , loc_2 ( m0 ) ) )
answer ( count ( intersection ( river , loc_2 ( m0 ) ) ) )
answer ( largest_one ( population_1 , intersection ( city , loc_2 ( m0 ) ) ) )
answer ( count ( citizen , largest_one ( city , intersection ( loc_2 ( usa ) , population_1 ) ) ) )
answer ( loc_1 ( m0 ) )
answer ( capital_1 ( m0 ) )
answer ( lowest ( elevation_1 , state ) )
answer ( largest_one ( population_1 , capital ) )
answer ( intersection ( state , next_to_2 ( m0 ) ) )
answer (population_1 (m0))
answer (intersection (major, intersection (city, loc_2(smallest(intersection(state, loc_2(m0)))))) )
answer ( longest ( river_1 ( intersection ( traverse_1 ( intersection ( state , next_to_2 ( border_1 ( argmax ( count_1 ( next_to_2 ( state ) ) ) ) ) ) ) ) ) ) )
answer ( population_1 ( m0 ) )
